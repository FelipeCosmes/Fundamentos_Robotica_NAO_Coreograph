<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram>
            <Box name="Setup" id="1" localization="8" tooltip="" x="103" y="46">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Go to position Stand" id="1" localization="8" tooltip="Robot will go to the position Stand&lt;br/&gt;Position description : Standing position with low power consumption. " x="94" y="13">
                        <bitmap>media/images/positions/Stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[#~ This script was generated automatically by drang&drop from Position Library
class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.postureService = None
        try:
            self.postureService = self.session().service("ALRobotPosture")
        except:
            self.logger.error("Module 'ALRobotPosture' not found.")

    def onUnload(self):
        if(self.postureService != None):
            self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.postureService != None):
            result = self.postureService.goToPosture("Stand", 0.8)
            if(result):
                self.success()
            else:
                self.logger.error("Posture Stand is not a part of the standard posture library or robot cannot reach the posture")
                self.failure()
        else:
            self.failure()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method,               as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                        <Resource name="Stiffness" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Select Camera" id="2" localization="8" tooltip="Change the currently used camera." x="304" y="12">
                        <bitmap>media/images/box/interaction/look.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.cameraModule = self.session().service( "ALVideoDevice" )

    def onUnload(self):
        pass

    def onInput_onUseTopCamera(self):
        self.cameraModule.setActiveCamera( 0 )
        self.onReady()

    def onInput_onUseBottomCamera(self):
        self.cameraModule.setActiveCamera( 1 )
        self.onReady()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onUseTopCamera" type="1" type_size="1" nature="1" inner="0" tooltip="Use the camera at the top of the head (forehead)." id="2" />
                        <Input name="onUseBottomCamera" type="1" type_size="1" nature="1" inner="0" tooltip="Use the camera at the bottom of the head (mouth)." id="3" />
                        <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="The camera change is done." id="4" />
                        <Resource name="Camera setting" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Autonomous Abilities" id="4" localization="8" tooltip="Autonomous Abilities exists to keep the robot alive at all times. But this box allows you to disable all or parts of the Autonomous Abilities (Autonomous Blinking, Background Movement, Basic Awareness, Listening Movement, Speaking Movement)." x="106" y="345">
                        <bitmap>media/images/box/auto-abilities.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.autonomouslife = self.session().service("ALAutonomousLife")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.enableAnAbility("AutonomousBlinking")
        self.enableAnAbility("BackgroundMovement")
        self.enableAnAbility("BasicAwareness")
        self.enableAnAbility("ListeningMovement")
        self.enableAnAbility("SpeakingMovement")
        self.onDone() # activate output of the box

    def enableAnAbility(self, name):
        self.autonomouslife.setAutonomousAbilityEnabled(name, self.getParameter(name))]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="AutonomousBlinking" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables the robot to make its eye leds blink when it sees someone and when it is interacting." id="4" />
                        <Parameter name="BackgroundMovement" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Defines which slight movements the robot does autonomously when its limbs are not moving." id="5" />
                        <Parameter name="BasicAwareness" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Allow to make the robot establish and keep eye contact with people." id="6" />
                        <Parameter name="ListeningMovement" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Enables some slight movements showing that the robot is listening." id="7" />
                        <Parameter name="SpeakingMovement" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Enables to start autonomously movements during the speech of the robot." id="8" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Exercicio 1" id="5" localization="8" tooltip="" x="125" y="409">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Text Edit" id="1" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="76" y="68">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Primeiro Exercicio, agachamento")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Primeiro Exercicio, agachamento]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="347" y="48">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Counter" id="3" localization="-1" tooltip="Represent a counter.&#x0A;&#x0A;Each time the onStart input is stimulated, the counter value is sent on the&#x0A;currentValue output and incremented (or decremented) by Step value, from&#x0A;its Initial value to its Final value set in the parameters. Once the counter value is&#x0A;higher than its Final value, the onReinitialized output is stimulated and&#x0A;the counter is reinitialized to the Initial value.&#x0A;&#x0A;Note: You can also reinitialize the counter by stimulating the onInit&#x0A;input." x="111" y="241">
                        <bitmap>media/images/box/loop.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.initializeParameters()
        if( self.getParameter("Final value") - self.getParameter("Initial value") >= 0 ):
            self.stepSign = +1
        else:
            self.stepSign = -1

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onNext(self):
        bParamChanged = ( self.nLast != self.getParameter("Final value") or self.nFirst != self.getParameter("Initial value") )
        bEnd = ( self.stepSign * self.nCounter > self.stepSign * self.nLast )
        if( bEnd or bParamChanged ):
            self.onInput_onInit()
        if( not bEnd or bParamChanged ):
            currentCounter = self.nCounter
            self.nCounter = self.nCounter + self.stepSign * self.getParameter("Step value")
            self.currentValue( currentCounter )

    def initializeParameters(self):
        self.nFirst = self.getParameter("Initial value")
        self.nCounter = self.nFirst
        self.nLast = self.getParameter("Final value")

    def onInput_onInit(self):
        self.initializeParameters()
        self.onReinitialized()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onNext" type="1" type_size="1" nature="1" inner="0" tooltip="The counter next value is sent on the currentValue output when a signal is&#x0A;received on this input, unless it reached its Final value, then the onReinitialized&#x0A;output is stimulated." id="2" />
                        <Input name="onInit" type="1" type_size="1" nature="1" inner="0" tooltip="When a signal is received on this input, the counter is reinitialized to its Initial&#x0A;value." id="3" />
                        <Output name="currentValue" type="2" type_size="1" nature="2" inner="0" tooltip="Stimulated for each interaction with the counter current value." id="4" />
                        <Output name="onReinitialized" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated when the loop is over or if the counter has been reinitialized." id="5" />
                        <Parameter name="Initial value" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="500" tooltip="The initial value of the counter (for the first iteration)." id="6" />
                        <Parameter name="Step value" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="1" max="500" tooltip="The counter value will be incremented or decremented with this value." id="7" />
                        <Parameter name="Final value" inherits_from_parent="0" content_type="1" value="3" default_value="5" min="0" max="500" tooltip="It is the maximum (if increasing) or the minimum (if decreasing) value of the&#x0A;counter (thus for the last iteration).&#x0A;&#x0A;After this value, if the onStart input is called, the onReinitialized output will be&#x0A;stimulated and the counter will be reinitialized to its Initial value." id="8" />
                      </Box>
                      <Box name="Timeline" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="109" y="386">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="input" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="-1">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="1" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="139" y="79">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Crouch" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Stand Up" id="2" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="300" y="75">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="StandUpBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                      <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="5" />
                      <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="5" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="StartCond" id="2" localization="8" tooltip="" x="249" y="44">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Text Edit" id="1" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="139" y="28">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Quando estiver pronto para os exercicios diga iniciar.")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Quando estiver pronto para os exercicios diga iniciar.]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="433" y="29">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Switch Case" id="4" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="155" y="343">
                        <bitmap>media/images/box/interaction/choice.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Iniciar")):
			self.output_1(p)
		elif(p == self.typeConversion("Aguarde")):
			self.output_2(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                          </content>
                        </script>
                        <pluginContent>
                          <keywords>
                            <keyword>&quot;Iniciar&quot;</keyword>
                            <keyword>&quot;Aguarde&quot;</keyword>
                            <keyword></keyword>
                          </keywords>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                        <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                        <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                        <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                      </Box>
                      <Box name="Speech Reco." id="3" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="161" y="201">
                        <bitmap>media/images/box/interaction/ear.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.asr = self.session().service("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = self.session().service("ALMemory")
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self):
        from threading import Lock
        self.mutex.acquire()
        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( self.getParameter("Word list").split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(value[0]) #~ activate output of the box
        else:
            self.onNothing()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" />
                        <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" />
                        <Parameter name="Word list" inherits_from_parent="0" content_type="3" value="Iniciar;Aguarde" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" />
                        <Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="40" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" />
                        <Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="9" />
                        <Resource name="Speech recognition" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                      <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="5" />
                      <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="5" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Switch Case" id="4" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="410" y="242">
              <bitmap>media/images/box/interaction/choice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Primeiro")):
			self.output_1(p)
		elif(p == self.typeConversion("Segundo")):
			self.output_2(p)
		elif(p == self.typeConversion("Terceiro")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                </content>
              </script>
              <pluginContent>
                <keywords>
                  <keyword>&quot;Primeiro&quot;</keyword>
                  <keyword>&quot;Segundo&quot;</keyword>
                  <keyword>&quot;Terceiro&quot;</keyword>
                  <keyword></keyword>
                </keywords>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
              <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
              <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
              <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
              <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
            </Box>
            <Box name="Text Edit" id="8" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="403" y="49">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Escolha entre os exercicios.")]]>
                </content>
              </script>
              <pluginContent>
                <text>
                  <![CDATA[Escolha entre os exercicios.]]>
                </text>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
              <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
            </Box>
            <Box name="Say Text" id="9" localization="8" tooltip="Say the text received on its input." x="656" y="51">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Exercicio 2" id="6" localization="8" tooltip="" x="335" y="409">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Text Edit" id="1" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="87" y="2">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Segundo Exercicio: Rosca com Halter")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Segundo Exercicio: Rosca com Halter]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="394" y="46">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Timeline" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="120" y="320">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="input" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="177">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="24" value="-87.6256" />
                              <Key frame="67" value="-22.7616" />
                              <Key frame="82" value="-87.6256" />
                              <Key frame="102" value="-22.7616" />
                              <Key frame="121" value="-87.6256" />
                              <Key frame="151" value="-78.3091" />
                              <Key frame="177" value="-25.3104" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="24" value="-87.191" />
                              <Key frame="67" value="-83.8511" />
                              <Key frame="82" value="-83.4117" />
                              <Key frame="102" value="-83.8511" />
                              <Key frame="121" value="-83.4117" />
                              <Key frame="151" value="-92.0251" />
                              <Key frame="177" value="-95.9802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LHand" mute="0" unit="1">
                              <Key frame="24" value="0.0268" />
                              <Key frame="67" value="0.0268" />
                              <Key frame="82" value="0.0268" />
                              <Key frame="102" value="0.0268" />
                              <Key frame="121" value="0.0268" />
                              <Key frame="151" value="0.0316" />
                              <Key frame="177" value="0.0316" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="24" value="57.8304" />
                              <Key frame="67" value="85.6041" />
                              <Key frame="82" value="62.4886" />
                              <Key frame="102" value="85.6041" />
                              <Key frame="121" value="62.4886" />
                              <Key frame="151" value="87.6256" />
                              <Key frame="177" value="103.446" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="24" value="-0.529749" />
                              <Key frame="67" value="0.524941" />
                              <Key frame="82" value="-0.441859" />
                              <Key frame="102" value="0.524941" />
                              <Key frame="121" value="-0.441859" />
                              <Key frame="151" value="7.81997" />
                              <Key frame="177" value="11.863" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="24" value="-93.3434" />
                              <Key frame="67" value="-93.8708" />
                              <Key frame="82" value="-92.3766" />
                              <Key frame="102" value="-93.8708" />
                              <Key frame="121" value="-92.3766" />
                              <Key frame="151" value="1.14019" />
                              <Key frame="177" value="1.31597" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="24" value="87.2789" />
                              <Key frame="67" value="87.3668" />
                              <Key frame="82" value="9.14314" />
                              <Key frame="102" value="87.3668" />
                              <Key frame="121" value="9.14314" />
                              <Key frame="151" value="78.3139" />
                              <Key frame="177" value="13.0104" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="24" value="74.7935" />
                              <Key frame="67" value="74.8813" />
                              <Key frame="82" value="92.6355" />
                              <Key frame="102" value="74.8813" />
                              <Key frame="121" value="92.6355" />
                              <Key frame="151" value="84.901" />
                              <Key frame="177" value="90.5261" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RHand" mute="0" unit="1">
                              <Key frame="24" value="0.1056" />
                              <Key frame="67" value="0.1056" />
                              <Key frame="82" value="0.1056" />
                              <Key frame="102" value="0.1056" />
                              <Key frame="121" value="0.1056" />
                              <Key frame="151" value="0.1056" />
                              <Key frame="177" value="0.1056" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="24" value="62.2297" />
                              <Key frame="67" value="62.3176" />
                              <Key frame="82" value="72.3373" />
                              <Key frame="102" value="62.3176" />
                              <Key frame="121" value="72.3373" />
                              <Key frame="151" value="86.9273" />
                              <Key frame="177" value="93.9586" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="24" value="10.0173" />
                              <Key frame="67" value="9.66569" />
                              <Key frame="82" value="3.77694" />
                              <Key frame="102" value="9.66569" />
                              <Key frame="121" value="3.77694" />
                              <Key frame="151" value="-6.24271" />
                              <Key frame="177" value="-9.40682" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="24" value="90.7897" />
                              <Key frame="67" value="90.7897" />
                              <Key frame="82" value="93.4265" />
                              <Key frame="102" value="90.7897" />
                              <Key frame="121" value="93.4265" />
                              <Key frame="151" value="10.1051" />
                              <Key frame="177" value="-0.705531" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="24" value="-7.82477" />
                              <Key frame="67" value="-7.82477" />
                              <Key frame="82" value="-7.82477" />
                              <Key frame="102" value="-7.82477" />
                              <Key frame="121" value="-7.82477" />
                              <Key frame="151" value="-7.82477" />
                              <Key frame="177" value="-7.82477" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="24" value="-0.353968" />
                              <Key frame="67" value="-0.266077" />
                              <Key frame="82" value="-0.266077" />
                              <Key frame="102" value="-0.266077" />
                              <Key frame="121" value="-0.266077" />
                              <Key frame="151" value="-0.353968" />
                              <Key frame="177" value="-0.353968" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="24" value="5.44688" />
                              <Key frame="67" value="5.53478" />
                              <Key frame="82" value="5.44688" />
                              <Key frame="102" value="5.53478" />
                              <Key frame="121" value="5.44688" />
                              <Key frame="151" value="5.53478" />
                              <Key frame="177" value="5.53478" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="24" value="-6.58948" />
                              <Key frame="67" value="-6.67737" />
                              <Key frame="82" value="-6.67737" />
                              <Key frame="102" value="-6.67737" />
                              <Key frame="121" value="-6.67737" />
                              <Key frame="151" value="-6.67737" />
                              <Key frame="177" value="-6.58948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="24" value="7.73688" />
                              <Key frame="67" value="7.73688" />
                              <Key frame="82" value="7.73688" />
                              <Key frame="102" value="7.73688" />
                              <Key frame="121" value="7.73688" />
                              <Key frame="151" value="7.73688" />
                              <Key frame="177" value="7.73688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="24" value="6.59429" />
                              <Key frame="67" value="6.59429" />
                              <Key frame="82" value="6.59429" />
                              <Key frame="102" value="6.59429" />
                              <Key frame="121" value="6.59429" />
                              <Key frame="151" value="6.68218" />
                              <Key frame="177" value="6.68218" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="24" value="-9.92936" />
                              <Key frame="67" value="-9.92936" />
                              <Key frame="82" value="-10.0173" />
                              <Key frame="102" value="-9.92936" />
                              <Key frame="121" value="-10.0173" />
                              <Key frame="151" value="-9.92936" />
                              <Key frame="177" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="24" value="-5.18802" />
                              <Key frame="67" value="-5.18802" />
                              <Key frame="82" value="-5.27591" />
                              <Key frame="102" value="-5.18802" />
                              <Key frame="121" value="-5.27591" />
                              <Key frame="151" value="-5.18802" />
                              <Key frame="177" value="-5.18802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="24" value="5.71537" />
                              <Key frame="67" value="5.80326" />
                              <Key frame="82" value="5.71537" />
                              <Key frame="102" value="5.80326" />
                              <Key frame="121" value="5.71537" />
                              <Key frame="151" value="5.80326" />
                              <Key frame="177" value="5.80326" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="24" value="4.22121" />
                              <Key frame="67" value="4.22121" />
                              <Key frame="82" value="4.22121" />
                              <Key frame="102" value="4.22121" />
                              <Key frame="121" value="4.22121" />
                              <Key frame="151" value="4.22121" />
                              <Key frame="177" value="4.22121" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="24" value="7.55628" />
                              <Key frame="67" value="7.55628" />
                              <Key frame="82" value="7.55628" />
                              <Key frame="102" value="7.55628" />
                              <Key frame="121" value="7.55628" />
                              <Key frame="151" value="7.55628" />
                              <Key frame="177" value="7.55628" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="24" value="-3.68905" />
                              <Key frame="67" value="-3.68905" />
                              <Key frame="82" value="-3.68905" />
                              <Key frame="102" value="-3.68905" />
                              <Key frame="121" value="-3.68905" />
                              <Key frame="151" value="-3.68905" />
                              <Key frame="177" value="-3.68905" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="24" value="-9.92936" />
                              <Key frame="67" value="-9.92936" />
                              <Key frame="82" value="-10.0173" />
                              <Key frame="102" value="-9.92936" />
                              <Key frame="121" value="-10.0173" />
                              <Key frame="151" value="-9.92936" />
                              <Key frame="177" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="24" value="-5.2711" />
                              <Key frame="67" value="-5.29" />
                              <Key frame="82" value="-5.29" />
                              <Key frame="102" value="-5.29" />
                              <Key frame="121" value="-5.29" />
                              <Key frame="151" value="-5.2711" />
                              <Key frame="177" value="-5.2711" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="5" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Exercicio 3" id="7" localization="8" tooltip="" x="645" y="411">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Text Edit" id="1" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="91" y="32">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Terceiro Exercicio: Flexões")]]>
                          </content>
                        </script>
                        <pluginContent>
                          <text>
                            <![CDATA[Terceiro Exercicio: Flexões]]>
                          </text>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                      </Box>
                      <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="398" y="76">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Timeline" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="129" y="234">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="input" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="513">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="20" value="-20.74" />
                              <Key frame="57" value="-2.28279" />
                              <Key frame="86" value="-2.28279" />
                              <Key frame="127" value="-3.0738" />
                              <Key frame="148" value="-82.7037" />
                              <Key frame="167" value="-3.0738" />
                              <Key frame="184" value="-82.7037" />
                              <Key frame="203" value="-3.0738" />
                              <Key frame="223" value="-82.7037" />
                              <Key frame="242" value="-3.0738" />
                              <Key frame="263" value="-82.7037" />
                              <Key frame="282" value="-3.0738" />
                              <Key frame="320" value="-2.0191" />
                              <Key frame="345" value="-3.68905" />
                              <Key frame="370" value="-2.81013" />
                              <Key frame="395" value="-2.98591" />
                              <Key frame="420" value="-2.45857" />
                              <Key frame="445" value="-2.0191" />
                              <Key frame="472" value="-2.54646" />
                              <Key frame="513" value="-22.3221" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="20" value="-71.7221" />
                              <Key frame="57" value="-47.8155" />
                              <Key frame="86" value="-38.3232" />
                              <Key frame="127" value="-38.3232" />
                              <Key frame="148" value="-56.341" />
                              <Key frame="167" value="-38.3232" />
                              <Key frame="184" value="-56.341" />
                              <Key frame="203" value="-38.3232" />
                              <Key frame="223" value="-56.341" />
                              <Key frame="242" value="-38.3232" />
                              <Key frame="263" value="-56.341" />
                              <Key frame="282" value="-38.3232" />
                              <Key frame="320" value="-70.2279" />
                              <Key frame="345" value="-71.0189" />
                              <Key frame="370" value="-70.931" />
                              <Key frame="395" value="-71.0189" />
                              <Key frame="420" value="-71.0189" />
                              <Key frame="445" value="-70.7552" />
                              <Key frame="472" value="-69.349" />
                              <Key frame="513" value="-69.5248" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LHand" mute="0" unit="1">
                              <Key frame="20" value="0.6256" />
                              <Key frame="57" value="0.0140001" />
                              <Key frame="86" value="0.0244" />
                              <Key frame="127" value="0.0244" />
                              <Key frame="148" value="0.064" />
                              <Key frame="167" value="0.0244" />
                              <Key frame="184" value="0.064" />
                              <Key frame="203" value="0.0244" />
                              <Key frame="223" value="0.064" />
                              <Key frame="242" value="0.0244" />
                              <Key frame="263" value="0.064" />
                              <Key frame="282" value="0.0244" />
                              <Key frame="320" value="0.0648" />
                              <Key frame="345" value="0.0684" />
                              <Key frame="370" value="0.0684" />
                              <Key frame="395" value="0.0684" />
                              <Key frame="420" value="0.0668" />
                              <Key frame="445" value="0.0648" />
                              <Key frame="472" value="0.0707999" />
                              <Key frame="513" value="0.2976" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="20" value="95.0964" />
                              <Key frame="57" value="32.2539" />
                              <Key frame="86" value="9.5778" />
                              <Key frame="127" value="-0.881327" />
                              <Key frame="148" value="42.713" />
                              <Key frame="167" value="-0.881327" />
                              <Key frame="184" value="42.713" />
                              <Key frame="203" value="-0.881327" />
                              <Key frame="223" value="42.713" />
                              <Key frame="242" value="-0.881327" />
                              <Key frame="263" value="42.713" />
                              <Key frame="282" value="-0.881327" />
                              <Key frame="320" value="21.7068" />
                              <Key frame="345" value="14.8513" />
                              <Key frame="370" value="22.1463" />
                              <Key frame="395" value="71.6294" />
                              <Key frame="420" value="73.4751" />
                              <Key frame="445" value="66.0922" />
                              <Key frame="472" value="67.1469" />
                              <Key frame="513" value="85.3405" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="20" value="12.8298" />
                              <Key frame="57" value="19.7732" />
                              <Key frame="86" value="0.43705" />
                              <Key frame="127" value="0.612832" />
                              <Key frame="148" value="42.0977" />
                              <Key frame="167" value="0.612832" />
                              <Key frame="184" value="42.0977" />
                              <Key frame="203" value="0.612832" />
                              <Key frame="223" value="42.0977" />
                              <Key frame="242" value="0.612832" />
                              <Key frame="263" value="42.0977" />
                              <Key frame="282" value="0.612832" />
                              <Key frame="320" value="0.876518" />
                              <Key frame="345" value="-2.37549" />
                              <Key frame="370" value="-0.00240423" />
                              <Key frame="395" value="16.6091" />
                              <Key frame="420" value="15.3786" />
                              <Key frame="445" value="14.9392" />
                              <Key frame="472" value="12.9177" />
                              <Key frame="513" value="7.3805" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="20" value="2.107" />
                              <Key frame="57" value="46.5802" />
                              <Key frame="86" value="33.4843" />
                              <Key frame="127" value="33.4843" />
                              <Key frame="148" value="87.0104" />
                              <Key frame="167" value="33.4843" />
                              <Key frame="184" value="87.0104" />
                              <Key frame="203" value="33.4843" />
                              <Key frame="223" value="87.0104" />
                              <Key frame="242" value="33.4843" />
                              <Key frame="263" value="87.0104" />
                              <Key frame="282" value="33.4843" />
                              <Key frame="320" value="63.5433" />
                              <Key frame="345" value="56.3362" />
                              <Key frame="370" value="58.2698" />
                              <Key frame="395" value="55.0178" />
                              <Key frame="420" value="54.3147" />
                              <Key frame="445" value="40.6915" />
                              <Key frame="472" value="39.7247" />
                              <Key frame="513" value="8.4352" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="20" value="15.9987" />
                              <Key frame="57" value="17.0534" />
                              <Key frame="86" value="11.692" />
                              <Key frame="127" value="13.274" />
                              <Key frame="148" value="77.7866" />
                              <Key frame="167" value="13.274" />
                              <Key frame="184" value="77.7866" />
                              <Key frame="203" value="13.274" />
                              <Key frame="223" value="77.7866" />
                              <Key frame="242" value="13.274" />
                              <Key frame="263" value="77.7866" />
                              <Key frame="282" value="13.274" />
                              <Key frame="320" value="2.1997" />
                              <Key frame="345" value="3.34228" />
                              <Key frame="370" value="3.25439" />
                              <Key frame="395" value="3.69386" />
                              <Key frame="420" value="3.43018" />
                              <Key frame="445" value="2" />
                              <Key frame="472" value="2.46338" />
                              <Key frame="513" value="23.5574" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="20" value="67.7621" />
                              <Key frame="57" value="67.6742" />
                              <Key frame="86" value="66.268" />
                              <Key frame="127" value="69.4321" />
                              <Key frame="148" value="56.7756" />
                              <Key frame="167" value="69.4321" />
                              <Key frame="184" value="56.7756" />
                              <Key frame="203" value="69.4321" />
                              <Key frame="223" value="56.7756" />
                              <Key frame="242" value="69.4321" />
                              <Key frame="263" value="56.7756" />
                              <Key frame="282" value="69.4321" />
                              <Key frame="320" value="66.3559" />
                              <Key frame="345" value="67.9379" />
                              <Key frame="370" value="67.9379" />
                              <Key frame="395" value="67.6742" />
                              <Key frame="420" value="67.4984" />
                              <Key frame="445" value="68.1137" />
                              <Key frame="472" value="67.4106" />
                              <Key frame="513" value="66.9711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RHand" mute="0" unit="1">
                              <Key frame="20" value="0.7316" />
                              <Key frame="57" value="0.7316" />
                              <Key frame="86" value="0.2236" />
                              <Key frame="127" value="0.224" />
                              <Key frame="148" value="0.1612" />
                              <Key frame="167" value="0.224" />
                              <Key frame="184" value="0.1612" />
                              <Key frame="203" value="0.224" />
                              <Key frame="223" value="0.1612" />
                              <Key frame="242" value="0.224" />
                              <Key frame="263" value="0.1612" />
                              <Key frame="282" value="0.224" />
                              <Key frame="320" value="0.1528" />
                              <Key frame="345" value="0.1572" />
                              <Key frame="370" value="0.1572" />
                              <Key frame="395" value="0.1572" />
                              <Key frame="420" value="0.1556" />
                              <Key frame="445" value="0.1528" />
                              <Key frame="472" value="0.1572" />
                              <Key frame="513" value="0.306" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="20" value="92.8161" />
                              <Key frame="57" value="92.6403" />
                              <Key frame="86" value="18.2839" />
                              <Key frame="127" value="2.37549" />
                              <Key frame="148" value="34.7196" />
                              <Key frame="167" value="2.37549" />
                              <Key frame="184" value="34.7196" />
                              <Key frame="203" value="2.37549" />
                              <Key frame="223" value="34.7196" />
                              <Key frame="242" value="2.37549" />
                              <Key frame="263" value="34.7196" />
                              <Key frame="282" value="2.37549" />
                              <Key frame="320" value="20.9206" />
                              <Key frame="345" value="74.2709" />
                              <Key frame="370" value="74.4467" />
                              <Key frame="395" value="74.5346" />
                              <Key frame="420" value="74.8862" />
                              <Key frame="445" value="65.306" />
                              <Key frame="472" value="67.1517" />
                              <Key frame="513" value="84.6421" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="20" value="-10.8131" />
                              <Key frame="57" value="-10.4615" />
                              <Key frame="86" value="1.31597" />
                              <Key frame="127" value="1.31597" />
                              <Key frame="148" value="-40.1689" />
                              <Key frame="167" value="1.31597" />
                              <Key frame="184" value="-40.1689" />
                              <Key frame="203" value="1.31597" />
                              <Key frame="223" value="-40.1689" />
                              <Key frame="242" value="1.31597" />
                              <Key frame="263" value="-40.1689" />
                              <Key frame="282" value="1.31597" />
                              <Key frame="320" value="0.876518" />
                              <Key frame="345" value="-21.6238" />
                              <Key frame="370" value="-22.7664" />
                              <Key frame="395" value="-19.6902" />
                              <Key frame="420" value="-16.9655" />
                              <Key frame="445" value="-11.692" />
                              <Key frame="472" value="-10.3736" />
                              <Key frame="513" value="-5.80326" />
                            </ActuatorCurve>
                            <ActuatorCurve name="" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="20" value="5.97423" />
                              <Key frame="57" value="5.97423" />
                              <Key frame="86" value="-65.0423" />
                              <Key frame="127" value="-64.9544" />
                              <Key frame="148" value="-61.0872" />
                              <Key frame="167" value="-64.9544" />
                              <Key frame="184" value="-61.0872" />
                              <Key frame="203" value="-64.9544" />
                              <Key frame="223" value="-61.0872" />
                              <Key frame="242" value="-64.9544" />
                              <Key frame="263" value="-61.0872" />
                              <Key frame="282" value="-64.9544" />
                              <Key frame="320" value="-65.2181" />
                              <Key frame="345" value="-65.5696" />
                              <Key frame="370" value="-65.5696" />
                              <Key frame="395" value="-65.2181" />
                              <Key frame="420" value="-64.3392" />
                              <Key frame="445" value="-49.1339" />
                              <Key frame="472" value="-48.1671" />
                              <Key frame="513" value="4.12851" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="20" value="-6.68218" />
                              <Key frame="57" value="-6.68218" />
                              <Key frame="86" value="-6.59429" />
                              <Key frame="127" value="-6.59429" />
                              <Key frame="148" value="-6.77007" />
                              <Key frame="167" value="-6.59429" />
                              <Key frame="184" value="-6.77007" />
                              <Key frame="203" value="-6.59429" />
                              <Key frame="223" value="-6.77007" />
                              <Key frame="242" value="-6.59429" />
                              <Key frame="263" value="-6.77007" />
                              <Key frame="282" value="-6.59429" />
                              <Key frame="320" value="-34.456" />
                              <Key frame="345" value="-30.6766" />
                              <Key frame="370" value="-30.7645" />
                              <Key frame="395" value="-31.204" />
                              <Key frame="420" value="-25.0515" />
                              <Key frame="445" value="-15.4713" />
                              <Key frame="472" value="-12.7467" />
                              <Key frame="513" value="-13.1862" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="20" value="-0.61764" />
                              <Key frame="57" value="-0.61764" />
                              <Key frame="86" value="-0.793436" />
                              <Key frame="127" value="-0.266077" />
                              <Key frame="148" value="2.37068" />
                              <Key frame="167" value="-0.266077" />
                              <Key frame="184" value="2.37068" />
                              <Key frame="203" value="-0.266077" />
                              <Key frame="223" value="2.37068" />
                              <Key frame="242" value="-0.266077" />
                              <Key frame="263" value="2.37068" />
                              <Key frame="282" value="-0.266077" />
                              <Key frame="320" value="-1.49656" />
                              <Key frame="345" value="-1.58445" />
                              <Key frame="370" value="-1.58445" />
                              <Key frame="395" value="-2.02391" />
                              <Key frame="420" value="-1.145" />
                              <Key frame="445" value="-0.353968" />
                              <Key frame="472" value="-1.145" />
                              <Key frame="513" value="-0.705531" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="20" value="-67.8548" />
                              <Key frame="57" value="-68.15" />
                              <Key frame="86" value="-68.15" />
                              <Key frame="127" value="-68.15" />
                              <Key frame="148" value="-68.15" />
                              <Key frame="167" value="-68.15" />
                              <Key frame="184" value="-68.15" />
                              <Key frame="203" value="-68.15" />
                              <Key frame="223" value="-68.15" />
                              <Key frame="242" value="-68.15" />
                              <Key frame="263" value="-68.15" />
                              <Key frame="282" value="-68.15" />
                              <Key frame="320" value="-68.15" />
                              <Key frame="345" value="-68.15" />
                              <Key frame="370" value="-68.15" />
                              <Key frame="395" value="-57.9231" />
                              <Key frame="420" value="-67.2396" />
                              <Key frame="445" value="-68.15" />
                              <Key frame="472" value="-51.3312" />
                              <Key frame="513" value="5.62267" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="20" value="4.3091" />
                              <Key frame="57" value="3.78175" />
                              <Key frame="86" value="-2.89802" />
                              <Key frame="127" value="-2.81013" />
                              <Key frame="148" value="-2.81013" />
                              <Key frame="167" value="-2.81013" />
                              <Key frame="184" value="-2.81013" />
                              <Key frame="203" value="-2.81013" />
                              <Key frame="223" value="-2.81013" />
                              <Key frame="242" value="-2.81013" />
                              <Key frame="263" value="-2.81013" />
                              <Key frame="282" value="-2.81013" />
                              <Key frame="320" value="-0.261268" />
                              <Key frame="345" value="3.78175" />
                              <Key frame="370" value="2.46338" />
                              <Key frame="395" value="-3.33748" />
                              <Key frame="420" value="-3.51326" />
                              <Key frame="445" value="3.78175" />
                              <Key frame="472" value="3.86964" />
                              <Key frame="513" value="-6.58948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="20" value="-34.8906" />
                              <Key frame="57" value="-79.8033" />
                              <Key frame="86" value="-90.1745" />
                              <Key frame="127" value="-22.9373" />
                              <Key frame="148" value="-22.9373" />
                              <Key frame="167" value="-22.9373" />
                              <Key frame="184" value="-22.9373" />
                              <Key frame="203" value="-22.9373" />
                              <Key frame="223" value="-22.9373" />
                              <Key frame="242" value="-22.9373" />
                              <Key frame="263" value="-22.9373" />
                              <Key frame="282" value="-22.9373" />
                              <Key frame="320" value="-84.2858" />
                              <Key frame="345" value="-79.3638" />
                              <Key frame="370" value="-72.5962" />
                              <Key frame="395" value="-56.7756" />
                              <Key frame="420" value="-43.9435" />
                              <Key frame="445" value="-36.209" />
                              <Key frame="472" value="-33.3086" />
                              <Key frame="513" value="7.64898" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="20" value="-3.0738" />
                              <Key frame="57" value="26.3699" />
                              <Key frame="86" value="-4.83163" />
                              <Key frame="127" value="-1.22808" />
                              <Key frame="148" value="-1.22808" />
                              <Key frame="167" value="-1.22808" />
                              <Key frame="184" value="-1.22808" />
                              <Key frame="203" value="-1.22808" />
                              <Key frame="223" value="-1.22808" />
                              <Key frame="242" value="-1.22808" />
                              <Key frame="263" value="-1.22808" />
                              <Key frame="282" value="-1.22808" />
                              <Key frame="320" value="-17.4002" />
                              <Key frame="345" value="-10.6325" />
                              <Key frame="370" value="-19.7732" />
                              <Key frame="395" value="-8.69887" />
                              <Key frame="420" value="9.58261" />
                              <Key frame="445" value="-2.37068" />
                              <Key frame="472" value="-0.876518" />
                              <Key frame="513" value="6.41851" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="20" value="-21.0037" />
                              <Key frame="57" value="-14.4997" />
                              <Key frame="86" value="-19.5096" />
                              <Key frame="127" value="-3.16169" />
                              <Key frame="148" value="-3.16169" />
                              <Key frame="167" value="-3.16169" />
                              <Key frame="184" value="-3.16169" />
                              <Key frame="203" value="-3.16169" />
                              <Key frame="223" value="-3.16169" />
                              <Key frame="242" value="-3.16169" />
                              <Key frame="263" value="-3.16169" />
                              <Key frame="282" value="-3.16169" />
                              <Key frame="320" value="-28.2987" />
                              <Key frame="345" value="-38.5821" />
                              <Key frame="370" value="-42.3614" />
                              <Key frame="395" value="-34.4511" />
                              <Key frame="420" value="-30.4081" />
                              <Key frame="445" value="-27.1561" />
                              <Key frame="472" value="-27.5956" />
                              <Key frame="513" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="20" value="121.04" />
                              <Key frame="57" value="121.025" />
                              <Key frame="86" value="118.212" />
                              <Key frame="127" value="28.7382" />
                              <Key frame="148" value="29.0019" />
                              <Key frame="167" value="28.7382" />
                              <Key frame="184" value="29.0019" />
                              <Key frame="203" value="28.7382" />
                              <Key frame="223" value="29.0019" />
                              <Key frame="242" value="28.7382" />
                              <Key frame="263" value="29.0019" />
                              <Key frame="282" value="28.7382" />
                              <Key frame="320" value="121.025" />
                              <Key frame="345" value="121.04" />
                              <Key frame="370" value="121.04" />
                              <Key frame="395" value="104.765" />
                              <Key frame="420" value="121.04" />
                              <Key frame="445" value="120.937" />
                              <Key frame="472" value="95.6238" />
                              <Key frame="513" value="-5.01224" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="20" value="-67.97" />
                              <Key frame="57" value="-61.7855" />
                              <Key frame="86" value="-67.97" />
                              <Key frame="127" value="-67.97" />
                              <Key frame="148" value="-67.9379" />
                              <Key frame="167" value="-67.97" />
                              <Key frame="184" value="-67.9379" />
                              <Key frame="203" value="-67.97" />
                              <Key frame="223" value="-67.9379" />
                              <Key frame="242" value="-67.97" />
                              <Key frame="263" value="-67.9379" />
                              <Key frame="282" value="-67.97" />
                              <Key frame="320" value="-67.97" />
                              <Key frame="345" value="-13.0935" />
                              <Key frame="370" value="40.8721" />
                              <Key frame="395" value="47.2003" />
                              <Key frame="420" value="-29.0019" />
                              <Key frame="445" value="-67.85" />
                              <Key frame="472" value="-44.4708" />
                              <Key frame="513" value="5.89115" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="20" value="-2.107" />
                              <Key frame="57" value="8.17634" />
                              <Key frame="86" value="-2.54646" />
                              <Key frame="127" value="1.67234" />
                              <Key frame="148" value="1.67234" />
                              <Key frame="167" value="1.67234" />
                              <Key frame="184" value="1.67234" />
                              <Key frame="203" value="1.67234" />
                              <Key frame="223" value="1.67234" />
                              <Key frame="242" value="1.67234" />
                              <Key frame="263" value="1.67234" />
                              <Key frame="282" value="1.67234" />
                              <Key frame="320" value="0.266077" />
                              <Key frame="345" value="11.8678" />
                              <Key frame="370" value="5.3638" />
                              <Key frame="395" value="-6.58948" />
                              <Key frame="420" value="13.274" />
                              <Key frame="445" value="-0.788627" />
                              <Key frame="472" value="3.51807" />
                              <Key frame="513" value="4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="20" value="-34.5439" />
                              <Key frame="57" value="-27.0731" />
                              <Key frame="86" value="-90.3551" />
                              <Key frame="127" value="-23.1179" />
                              <Key frame="148" value="-23.4695" />
                              <Key frame="167" value="-23.1179" />
                              <Key frame="184" value="-23.4695" />
                              <Key frame="203" value="-23.1179" />
                              <Key frame="223" value="-23.4695" />
                              <Key frame="242" value="-23.1179" />
                              <Key frame="263" value="-23.4695" />
                              <Key frame="282" value="-23.1179" />
                              <Key frame="320" value="-85.7847" />
                              <Key frame="345" value="-94.7497" />
                              <Key frame="370" value="-93.9586" />
                              <Key frame="395" value="-72.5131" />
                              <Key frame="420" value="-71.4584" />
                              <Key frame="445" value="-37.708" />
                              <Key frame="472" value="-35.5107" />
                              <Key frame="513" value="7.64417" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="20" value="-0.612832" />
                              <Key frame="57" value="21.0085" />
                              <Key frame="86" value="17.9323" />
                              <Key frame="127" value="-7.81997" />
                              <Key frame="148" value="-7.81997" />
                              <Key frame="167" value="-7.81997" />
                              <Key frame="184" value="-7.81997" />
                              <Key frame="203" value="-7.81997" />
                              <Key frame="223" value="-7.81997" />
                              <Key frame="242" value="-7.81997" />
                              <Key frame="263" value="-7.81997" />
                              <Key frame="282" value="-7.81997" />
                              <Key frame="320" value="15.2077" />
                              <Key frame="345" value="16.0866" />
                              <Key frame="370" value="16.8776" />
                              <Key frame="395" value="16.5261" />
                              <Key frame="420" value="-12.3903" />
                              <Key frame="445" value="-2.37068" />
                              <Key frame="472" value="-1.22808" />
                              <Key frame="513" value="-3.51326" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="20" value="-21.0037" />
                              <Key frame="57" value="-14.4997" />
                              <Key frame="86" value="-19.5096" />
                              <Key frame="127" value="-3.16169" />
                              <Key frame="148" value="-3.16169" />
                              <Key frame="167" value="-3.16169" />
                              <Key frame="184" value="-3.16169" />
                              <Key frame="203" value="-3.16169" />
                              <Key frame="223" value="-3.16169" />
                              <Key frame="242" value="-3.16169" />
                              <Key frame="263" value="-3.16169" />
                              <Key frame="282" value="-3.16169" />
                              <Key frame="320" value="-28.2987" />
                              <Key frame="345" value="-38.5821" />
                              <Key frame="370" value="-42.3614" />
                              <Key frame="395" value="-34.4511" />
                              <Key frame="420" value="-30.4081" />
                              <Key frame="445" value="-27.1561" />
                              <Key frame="472" value="-27.5956" />
                              <Key frame="513" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="20" value="121.04" />
                              <Key frame="57" value="69.1732" />
                              <Key frame="86" value="118.305" />
                              <Key frame="127" value="29.4461" />
                              <Key frame="148" value="29.7977" />
                              <Key frame="167" value="29.4461" />
                              <Key frame="184" value="29.7977" />
                              <Key frame="203" value="29.4461" />
                              <Key frame="223" value="29.7977" />
                              <Key frame="242" value="29.4461" />
                              <Key frame="263" value="29.7977" />
                              <Key frame="282" value="29.4461" />
                              <Key frame="320" value="121.04" />
                              <Key frame="345" value="91.6735" />
                              <Key frame="370" value="34.2802" />
                              <Key frame="395" value="12.0436" />
                              <Key frame="420" value="113.383" />
                              <Key frame="445" value="121.04" />
                              <Key frame="472" value="92.8161" />
                              <Key frame="513" value="-5.09532" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="5" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Speech Reco." id="3" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="244" y="234">
              <bitmap>media/images/box/interaction/ear.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.asr = self.session().service("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = self.session().service("ALMemory")
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self):
        from threading import Lock
        self.mutex.acquire()
        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( self.getParameter("Word list").split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(value[0]) #~ activate output of the box
        else:
            self.onNothing()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" />
              <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" />
              <Parameter name="Word list" inherits_from_parent="0" content_type="3" value="Primeiro;Segundo;Terceiro" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" />
              <Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="40" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" />
              <Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="9" />
              <Resource name="Speech recognition" type="Lock" timeout="0" />
            </Box>
            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
            <Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="3" />
            <Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="4" />
            <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
            <Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="5" />
            <Link inputowner="7" indexofinput="2" outputowner="4" indexofoutput="6" />
            <Link inputowner="8" indexofinput="2" outputowner="5" indexofoutput="4" />
            <Link inputowner="8" indexofinput="2" outputowner="6" indexofoutput="4" />
            <Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="4" />
            <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="5" />
            <Link inputowner="3" indexofinput="2" outputowner="9" indexofoutput="4" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
